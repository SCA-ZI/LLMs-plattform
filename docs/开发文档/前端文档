# 大模型评测平台前端布局设计文档

## 一、整体布局架构

### 1. 布局结构

采用现代化的响应式布局，基于React和Material-UI (MUI)组件库实现。整体布局分为以下几个部分：

- **顶部导航栏（AppBar）**：包含平台Logo、主导航菜单、用户信息/登录入口
- **侧边栏（Drawer）**：提供功能模块的详细导航，可折叠
- **主内容区（Main Content）**：展示各功能模块的具体内容
- **页脚（Footer）**：版权信息、联系方式等

### 2. 导航系统

采用两级导航结构：
- **一级导航**：位于顶部AppBar，提供主要功能模块入口
- **二级导航**：位于侧边栏，根据当前选中的功能模块显示相应的子功能

### 3. 响应式设计

- **桌面端**（>= 1024px）：完整显示侧边栏和内容区
- **平板端**（768px - 1023px）：可折叠侧边栏，点击按钮展开
- **移动端**（< 768px）：侧边栏默认隐藏，通过汉堡菜单按钮触发显示，内容区采用单列布局

## 二、核心页面布局

### 1. 首页（Dashboard）

```
+----------------------------------+
|            AppBar                |
+--------+-----------------------+
|        |                       |
|        |  平台概览统计卡片     |
|        |                       |
|        +-----------------------+
|        |                       |
| 侧边栏 |  最近评测结果         |
|        |                       |
|        +-----------------------+
|        |                       |
|        |  快速入口             |
|        |                       |
+--------+-----------------------+
|            Footer               |
+----------------------------------+
```

- **平台概览统计卡片**：展示题目总数、已评测模型数、评测任务数等关键指标
- **最近评测结果**：展示最近完成的评测任务及其简要结果
- **快速入口**：提供常用功能的快捷访问入口

### 2. 题目生成模块

```
+----------------------------------+
|            AppBar                |
+--------+-----------------------+
|        |                       |
|        |  题目生成方式选择     |
|        |                       |
|        +-----------------------+
|        |                       |
| 侧边栏 |  题目生成表单/编辑器  |
|        |                       |
|        +-----------------------+
|        |                       |
|        |  生成结果预览         |
|        |                       |
+--------+-----------------------+
|            Footer               |
+----------------------------------+
```

- **题目生成方式选择**：提供"提示词生成"和"文档拆解生成"两种方式的切换
- **题目生成表单/编辑器**：根据选择的生成方式显示相应的输入表单
- **生成结果预览**：实时预览生成的题目，支持编辑和导出

### 3. 模型评测模块

```
+----------------------------------+
|            AppBar                |
+--------+-----------------------+
|        |                       |
|        |  模型选择面板         |
|        |                       |
|        +-----------------------+
|        |                       |
| 侧边栏 |  评测题目集选择       |
|        |                       |
|        +-----------------------+
|        |                       |
|        |  评测结果展示         |
|        |                       |
+--------+-----------------------+
|            Footer               |
+----------------------------------+
```

- **模型选择面板**：支持选择多个模型进行对比评测
- **评测题目集选择**：选择或上传要用于评测的题目集
- **评测结果展示**：通过表格、图表等方式直观展示评测结果

### 4. 文档拆解模块

```
+----------------------------------+
|            AppBar                |
+--------+-----------------------+
|        |                       |
|        |  文档上传/选择        |
|        |                       |
|        +-----------------------+
|        |                       |
| 侧边栏 |  文档内容预览         |
|        |                       |
|        +-----------------------+
|        |                       |
|        |  拆解结果与题目生成   |
|        |                       |
+--------+-----------------------+
|            Footer               |
+----------------------------------+
```

- **文档上传/选择**：支持上传新文档或选择已有文档
- **文档内容预览**：预览文档内容，支持标记重点段落
- **拆解结果与题目生成**：展示文档拆解结果，并生成相应题目

### 5. 数据管理与格式转换模块

```
+----------------------------------+
|            AppBar                |
+--------+-----------------------+
|        |                       |
|        |  数据类型选择标签页   |
|        |                       |
|        +-----------------------+
|        |                       |
| 侧边栏 |  数据列表/搜索        |
|        |                       |
|        +-----------------------+
|        |                       |
|        |  数据操作面板         |
|        |                       |
+--------+-----------------------+
|            Footer               |
+----------------------------------+
```

- **数据类型选择标签页**：切换不同类型的数据（题目、评测结果等）
- **数据列表/搜索**：展示数据列表，支持搜索和筛选
- **数据操作面板**：提供导入、导出、格式转换等操作

## 三、组件设计

### 1. 通用组件

#### 1.1 导航组件

- **AppBar**：顶部导航栏，包含Logo、主导航菜单和用户信息
- **Drawer**：侧边导航栏，支持固定和折叠两种模式
- **NavMenu**：导航菜单，支持多级菜单结构
- **Breadcrumb**：面包屑导航，显示当前页面位置

#### 1.2 数据展示组件

- **DataTable**：数据表格，支持排序、筛选、分页等功能
- **DataCard**：数据卡片，用于展示统计数据或概览信息
- **Chart**：图表组件，支持多种图表类型（柱状图、折线图、雷达图等）
- **ResultComparison**：结果对比组件，用于模型评测结果的对比展示

#### 1.3 表单组件

- **FilterForm**：筛选表单，用于数据筛选
- **SearchInput**：搜索输入框，支持实时搜索
- **PromptEditor**：提示词编辑器，支持模板和变量
- **FileUploader**：文件上传组件，支持拖拽上传和预览

### 2. 业务组件

#### 2.1 题目生成相关

- **PromptGenerator**：提示词生成器，提供模板和自定义选项
- **QuestionEditor**：题目编辑器，支持多种题型的编辑
- **QuestionPreview**：题目预览组件，展示生成的题目效果

#### 2.2 模型评测相关

- **ModelSelector**：模型选择器，支持选择多个模型进行对比
- **EvaluationConfig**：评测配置面板，设置评测参数
- **ResultDashboard**：评测结果仪表盘，直观展示评测指标

#### 2.3 文档拆解相关

- **DocumentViewer**：文档查看器，支持预览和标记
- **SectionExtractor**：段落提取器，识别文档中的关键段落
- **QuestionGenerator**：基于文档内容的题目生成器

## 四、主题与样式

### 1. 色彩方案

- **主色调**：#1976d2（蓝色），用于主要按钮、链接和强调元素
- **辅助色**：#dc004e（红色），用于警告、错误提示等
- **背景色**：#f5f5f5（浅灰色），作为页面背景
- **文本色**：#333333（深灰色），作为主要文本颜色

### 2. 排版

- **主要字体**：Roboto, sans-serif
- **标题大小**：h1: 2.5rem, h2: 2rem, h3: 1.75rem, h4: 1.5rem, h5: 1.25rem, h6: 1rem
- **正文大小**：1rem（16px）
- **行高**：1.5

### 3. 间距与布局

- 采用8px为基础单位的间距系统
- 页面内边距：desktop: 24px, tablet: 16px, mobile: 8px
- 组件间距：16px
- 卡片内边距：16px

## 五、交互设计

### 1. 状态反馈

- **加载状态**：使用进度条或骨架屏显示加载过程
- **操作反馈**：使用Snackbar提供操作成功/失败的即时反馈
- **表单验证**：实时表单验证，提供清晰的错误提示

### 2. 动画效果

- 页面切换时使用淡入淡出效果
- 侧边栏展开/折叠时使用滑动效果
- 数据加载完成后使用渐显效果

### 3. 响应式交互

- 在移动端支持手势操作（如滑动切换页面）
- 根据屏幕尺寸自动调整交互方式（如下拉菜单变为全屏菜单）

## 六、与后端交互

### 1. API调用模式

- 采用RESTful API风格进行前后端交互
- 使用Axios库处理HTTP请求
- 实现请求拦截器处理认证和错误

### 2. 数据加载策略

- 实现数据懒加载，提高页面初始加载速度
- 对频繁访问的数据实现本地缓存
- 大数据集采用分页加载或虚拟滚动

### 3. 实时更新

- 评测任务状态通过轮询或WebSocket实现实时更新
- 支持数据的实时协作编辑

## 七、性能优化

### 1. 代码分割

- 按路由进行代码分割，实现按需加载
- 将第三方库单独打包，利用浏览器缓存

### 2. 资源优化

- 图片懒加载和适当压缩
- 使用SVG图标代替图片图标
- 实现关键CSS的内联，非关键CSS的异步加载

### 3. 渲染优化

- 使用React.memo和useMemo减少不必要的重渲染
- 大列表使用虚拟滚动技术
- 优化组件挂载和卸载逻辑

## 八、实现路径

### 1. 第一阶段：基础框架搭建

- 实现基础布局（AppBar、Drawer、Content、Footer）
- 完成路由配置
- 设置全局主题和样式

### 2. 第二阶段：核心功能页面实现

- 实现Dashboard页面
- 实现题目生成模块
- 实现模型评测模块

### 3. 第三阶段：扩展功能实现

- 实现文档拆解模块
- 实现数据管理与格式转换模块

### 4. 第四阶段：优化与完善

- 实现响应式布局适配
- 性能优化
- 用户体验改进

## 九、兼容性考虑

- 支持主流现代浏览器（Chrome、Firefox、Safari、Edge）
- 移动端适配（iOS Safari、Android Chrome）
- 针对不同设备分辨率进行布局优化